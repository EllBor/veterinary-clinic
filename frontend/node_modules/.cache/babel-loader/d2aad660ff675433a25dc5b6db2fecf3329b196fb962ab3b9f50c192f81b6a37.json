{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"../../axios\";\nexport const fetchDoctors = createAsyncThunk('doctors/fetchDoctors', async () => {\n  const {\n    data\n  } = await axios.get('/doctor');\n  return data;\n});\nexport const fetchOneDoctor = createAsyncThunk('doctors/fetchOneDoctor', async id => {\n  const {\n    data\n  } = await axios.get(`/doctor/${id}`);\n  return data;\n});\nexport const fetchDoctorAppointments = createAsyncThunk('doctors/fetchDoctorAppointments', async id => {\n  const {\n    data\n  } = await axios.get(`/doctor/${id}/appointments`);\n  return data;\n});\nexport const fetchDoctorsWithAppointments = createAsyncThunk('doctors/fetchDoctorsWithAppointments', async () => {\n  const {\n    data\n  } = await axios.get(`/doctors/appointments`);\n  console.log(\"data\", data);\n  return data;\n});\nconst initialState = {\n  doctorsWithAppointments: [],\n  doctors: {\n    items: [],\n    status: 'loading'\n  }\n};\nconst doctorsSlice = createSlice({\n  name: 'doctors',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchDoctors.pending, state => {\n      state.status = 'loading';\n      state.error = null;\n    }).addCase(fetchDoctors.fulfilled, (state, action) => {\n      state.status = 'loaded';\n      state.items = action.payload;\n    }).addCase(fetchDoctors.rejected, (state, action) => {\n      state.status = 'error';\n      state.error = action.error.message;\n    }).addCase(fetchDoctorsWithAppointments.pending, state => {\n      state.status = 'loading';\n      state.error = null;\n    }).addCase(fetchDoctorsWithAppointments.fulfilled, (state, action) => {\n      state.status = 'loaded';\n      state.doctorsWithAppointments = action.payload.doctorsWithAppointments;\n    }).addCase(fetchDoctorsWithAppointments.rejected, (state, action) => {\n      state.status = 'error';\n      state.error = action.error.message;\n    }).addCase(fetchOneDoctor.pending, state => {\n      state.status = 'loading';\n      state.error = null;\n    }).addCase(fetchOneDoctor.fulfilled, (state, action) => {\n      state.status = 'loaded';\n      state.items = action.payload;\n    }).addCase(fetchOneDoctor.rejected, (state, action) => {\n      state.status = 'error';\n      state.error = action.error.message;\n    }).addCase(fetchDoctorAppointments.pending, state => {\n      state.status = 'loading';\n      state.error = null;\n    }).addCase(fetchDoctorAppointments.fulfilled, (state, action) => {\n      state.status = 'loaded';\n      state.nearestAppointment = action.payload.nearestAppointment;\n    }).addCase(fetchDoctorAppointments.rejected, (state, action) => {\n      state.status = 'error';\n      state.error = action.error.message;\n    });\n  }\n});\nexport const doctorsReducer = doctorsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","fetchDoctors","data","get","fetchOneDoctor","id","fetchDoctorAppointments","fetchDoctorsWithAppointments","console","log","initialState","doctorsWithAppointments","doctors","items","status","doctorsSlice","name","reducers","extraReducers","builder","addCase","pending","state","error","fulfilled","action","payload","rejected","message","nearestAppointment","doctorsReducer","reducer"],"sources":["C:/Users/Елизавета/veterinary-clinic/frontend/src/redux/slices/doctors.js"],"sourcesContent":["import {createSlice, createAsyncThunk} from \"@reduxjs/toolkit\";\r\nimport axios from \"../../axios\";\r\n\r\nexport const fetchDoctors = createAsyncThunk('doctors/fetchDoctors', async () => {\r\n    const {data} = await axios.get('/doctor');\r\n    return data;\r\n})\r\n\r\nexport const fetchOneDoctor = createAsyncThunk('doctors/fetchOneDoctor', async (id) => {\r\n    const {data} = await axios.get(`/doctor/${id}`);\r\n    return data;\r\n})\r\n\r\nexport const fetchDoctorAppointments = createAsyncThunk('doctors/fetchDoctorAppointments', async (id) => {\r\n    const {data} = await axios.get(`/doctor/${id}/appointments`);\r\n    return data;\r\n})\r\n\r\nexport const fetchDoctorsWithAppointments = createAsyncThunk('doctors/fetchDoctorsWithAppointments', async () => {\r\n    const {data} = await axios.get(`/doctors/appointments`);\r\n    console.log(\"data\", data);\r\n    return data;\r\n})\r\n\r\nconst initialState = {\r\n    doctorsWithAppointments: [],\r\n    doctors: {\r\n        items: [],\r\n        status: 'loading',\r\n    }\r\n};\r\n\r\nconst doctorsSlice = createSlice({\r\n    name: 'doctors',\r\n    initialState,\r\n    reducers: {},\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(fetchDoctors.pending, (state) => {\r\n                state.status = 'loading';\r\n                state.error = null;\r\n            })\r\n            .addCase(fetchDoctors.fulfilled, (state, action) => {\r\n                state.status = 'loaded';\r\n                state.items = action.payload;\r\n            })\r\n            .addCase(fetchDoctors.rejected, (state, action) => {\r\n                state.status = 'error';\r\n                state.error = action.error.message;\r\n            })\r\n            .addCase(fetchDoctorsWithAppointments.pending, (state) => {\r\n                state.status = 'loading';\r\n                state.error = null;\r\n            })\r\n            .addCase(fetchDoctorsWithAppointments.fulfilled, (state, action) => {\r\n                state.status = 'loaded';\r\n                state.doctorsWithAppointments = action.payload.doctorsWithAppointments;\r\n            })\r\n            .addCase(fetchDoctorsWithAppointments.rejected, (state, action) => {\r\n                state.status = 'error';\r\n                state.error = action.error.message;\r\n            })\r\n            .addCase(fetchOneDoctor.pending, (state) => {\r\n                state.status = 'loading';\r\n                state.error = null;\r\n            })\r\n            .addCase(fetchOneDoctor.fulfilled, (state, action) => {\r\n                state.status = 'loaded';\r\n                state.items = action.payload;\r\n            })\r\n            .addCase(fetchOneDoctor.rejected, (state, action) => {\r\n                state.status = 'error';\r\n                state.error = action.error.message;\r\n            })\r\n            .addCase(fetchDoctorAppointments.pending, (state) => {\r\n                state.status = 'loading';\r\n                state.error = null;\r\n            })\r\n            .addCase(fetchDoctorAppointments.fulfilled, (state, action) => {\r\n                state.status = 'loaded';\r\n                state.nearestAppointment = action.payload.nearestAppointment;\r\n            })\r\n            .addCase(fetchDoctorAppointments.rejected, (state, action) => {\r\n                state.status = 'error';\r\n                state.error = action.error.message;\r\n            });\r\n    },\r\n})\r\n\r\nexport const doctorsReducer = doctorsSlice.reducer;"],"mappings":"AAAA,SAAQA,WAAW,EAAEC,gBAAgB,QAAO,kBAAkB;AAC9D,OAAOC,KAAK,MAAM,aAAa;AAE/B,OAAO,MAAMC,YAAY,GAAGF,gBAAgB,CAAC,sBAAsB,EAAE,YAAY;EAC7E,MAAM;IAACG;EAAI,CAAC,GAAG,MAAMF,KAAK,CAACG,GAAG,CAAC,SAAS,CAAC;EACzC,OAAOD,IAAI;AACf,CAAC,CAAC;AAEF,OAAO,MAAME,cAAc,GAAGL,gBAAgB,CAAC,wBAAwB,EAAE,MAAOM,EAAE,IAAK;EACnF,MAAM;IAACH;EAAI,CAAC,GAAG,MAAMF,KAAK,CAACG,GAAG,CAAE,WAAUE,EAAG,EAAC,CAAC;EAC/C,OAAOH,IAAI;AACf,CAAC,CAAC;AAEF,OAAO,MAAMI,uBAAuB,GAAGP,gBAAgB,CAAC,iCAAiC,EAAE,MAAOM,EAAE,IAAK;EACrG,MAAM;IAACH;EAAI,CAAC,GAAG,MAAMF,KAAK,CAACG,GAAG,CAAE,WAAUE,EAAG,eAAc,CAAC;EAC5D,OAAOH,IAAI;AACf,CAAC,CAAC;AAEF,OAAO,MAAMK,4BAA4B,GAAGR,gBAAgB,CAAC,sCAAsC,EAAE,YAAY;EAC7G,MAAM;IAACG;EAAI,CAAC,GAAG,MAAMF,KAAK,CAACG,GAAG,CAAE,uBAAsB,CAAC;EACvDK,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEP,IAAI,CAAC;EACzB,OAAOA,IAAI;AACf,CAAC,CAAC;AAEF,MAAMQ,YAAY,GAAG;EACjBC,uBAAuB,EAAE,EAAE;EAC3BC,OAAO,EAAE;IACLC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE;EACZ;AACJ,CAAC;AAED,MAAMC,YAAY,GAAGjB,WAAW,CAAC;EAC7BkB,IAAI,EAAE,SAAS;EACfN,YAAY;EACZO,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAACnB,YAAY,CAACoB,OAAO,EAAGC,KAAK,IAAK;MACtCA,KAAK,CAACR,MAAM,GAAG,SAAS;MACxBQ,KAAK,CAACC,KAAK,GAAG,IAAI;IACtB,CAAC,CAAC,CACDH,OAAO,CAACnB,YAAY,CAACuB,SAAS,EAAE,CAACF,KAAK,EAAEG,MAAM,KAAK;MAChDH,KAAK,CAACR,MAAM,GAAG,QAAQ;MACvBQ,KAAK,CAACT,KAAK,GAAGY,MAAM,CAACC,OAAO;IAChC,CAAC,CAAC,CACDN,OAAO,CAACnB,YAAY,CAAC0B,QAAQ,EAAE,CAACL,KAAK,EAAEG,MAAM,KAAK;MAC/CH,KAAK,CAACR,MAAM,GAAG,OAAO;MACtBQ,KAAK,CAACC,KAAK,GAAGE,MAAM,CAACF,KAAK,CAACK,OAAO;IACtC,CAAC,CAAC,CACDR,OAAO,CAACb,4BAA4B,CAACc,OAAO,EAAGC,KAAK,IAAK;MACtDA,KAAK,CAACR,MAAM,GAAG,SAAS;MACxBQ,KAAK,CAACC,KAAK,GAAG,IAAI;IACtB,CAAC,CAAC,CACDH,OAAO,CAACb,4BAA4B,CAACiB,SAAS,EAAE,CAACF,KAAK,EAAEG,MAAM,KAAK;MAChEH,KAAK,CAACR,MAAM,GAAG,QAAQ;MACvBQ,KAAK,CAACX,uBAAuB,GAAGc,MAAM,CAACC,OAAO,CAACf,uBAAuB;IAC1E,CAAC,CAAC,CACDS,OAAO,CAACb,4BAA4B,CAACoB,QAAQ,EAAE,CAACL,KAAK,EAAEG,MAAM,KAAK;MAC/DH,KAAK,CAACR,MAAM,GAAG,OAAO;MACtBQ,KAAK,CAACC,KAAK,GAAGE,MAAM,CAACF,KAAK,CAACK,OAAO;IACtC,CAAC,CAAC,CACDR,OAAO,CAAChB,cAAc,CAACiB,OAAO,EAAGC,KAAK,IAAK;MACxCA,KAAK,CAACR,MAAM,GAAG,SAAS;MACxBQ,KAAK,CAACC,KAAK,GAAG,IAAI;IACtB,CAAC,CAAC,CACDH,OAAO,CAAChB,cAAc,CAACoB,SAAS,EAAE,CAACF,KAAK,EAAEG,MAAM,KAAK;MAClDH,KAAK,CAACR,MAAM,GAAG,QAAQ;MACvBQ,KAAK,CAACT,KAAK,GAAGY,MAAM,CAACC,OAAO;IAChC,CAAC,CAAC,CACDN,OAAO,CAAChB,cAAc,CAACuB,QAAQ,EAAE,CAACL,KAAK,EAAEG,MAAM,KAAK;MACjDH,KAAK,CAACR,MAAM,GAAG,OAAO;MACtBQ,KAAK,CAACC,KAAK,GAAGE,MAAM,CAACF,KAAK,CAACK,OAAO;IACtC,CAAC,CAAC,CACDR,OAAO,CAACd,uBAAuB,CAACe,OAAO,EAAGC,KAAK,IAAK;MACjDA,KAAK,CAACR,MAAM,GAAG,SAAS;MACxBQ,KAAK,CAACC,KAAK,GAAG,IAAI;IACtB,CAAC,CAAC,CACDH,OAAO,CAACd,uBAAuB,CAACkB,SAAS,EAAE,CAACF,KAAK,EAAEG,MAAM,KAAK;MAC3DH,KAAK,CAACR,MAAM,GAAG,QAAQ;MACvBQ,KAAK,CAACO,kBAAkB,GAAGJ,MAAM,CAACC,OAAO,CAACG,kBAAkB;IAChE,CAAC,CAAC,CACDT,OAAO,CAACd,uBAAuB,CAACqB,QAAQ,EAAE,CAACL,KAAK,EAAEG,MAAM,KAAK;MAC1DH,KAAK,CAACR,MAAM,GAAG,OAAO;MACtBQ,KAAK,CAACC,KAAK,GAAGE,MAAM,CAACF,KAAK,CAACK,OAAO;IACtC,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,OAAO,MAAME,cAAc,GAAGf,YAAY,CAACgB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}