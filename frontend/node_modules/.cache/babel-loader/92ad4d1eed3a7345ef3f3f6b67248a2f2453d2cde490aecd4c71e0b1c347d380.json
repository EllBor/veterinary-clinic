{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0415\\u043B\\u0438\\u0437\\u0430\\u0432\\u0435\\u0442\\u0430\\\\veterinary-clinic\\\\frontend\\\\src\\\\components\\\\petsSlider\\\\PetsSlider.js\";\nimport React from 'react';\nimport Pets from \"../pets/Pets\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst flickityOptions = {\n  contain: true,\n  wrapAround: true,\n  autoPlay: 2000,\n  prevNextButtons: true,\n  pageDots: true,\n  setGallerySize: false\n};\nconst PetsSlider = ({\n  pets,\n  isPetsLoading,\n  id\n}) => {\n  return /*#__PURE__*/_jsxDEV(Flickity, {\n    className: \"carousel\" // или любой другой класс, который вы хотите использовать\n    ,\n    elementType: 'div' // по умолчанию 'div'\n    ,\n    options: flickityOptions // Опции Flickity\n    ,\n    disableImagesLoaded: false // Обрабатывать загрузку изображений\n    ,\n    reloadOnUpdate: true // Перезагружать при обновлении\n    ,\n    static: true // Статический, для более гладкой интеграции с React\n    ,\n    children: (isPetsLoading ? [...Array(3)] : pets.items || []).map((obj, index) => isPetsLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"carousel-cell\",\n      children: /*#__PURE__*/_jsxDEV(Pets, {\n        isLoading: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"carousel-cell\",\n      children: /*#__PURE__*/_jsxDEV(Pets, {\n        userId: id,\n        petId: obj._id,\n        name: obj.name,\n        breed: obj.breed,\n        gender: obj.gender,\n        species: obj.species,\n        age: obj.age,\n        avatarUrl: obj.avatarUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)\n    }, obj._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_c = PetsSlider;\nexport default PetsSlider;\nvar _c;\n$RefreshReg$(_c, \"PetsSlider\");","map":{"version":3,"names":["React","Pets","jsxDEV","_jsxDEV","flickityOptions","contain","wrapAround","autoPlay","prevNextButtons","pageDots","setGallerySize","PetsSlider","pets","isPetsLoading","id","Flickity","className","elementType","options","disableImagesLoaded","reloadOnUpdate","static","children","Array","items","map","obj","index","isLoading","fileName","_jsxFileName","lineNumber","columnNumber","userId","petId","_id","name","breed","gender","species","age","avatarUrl","_c","$RefreshReg$"],"sources":["C:/Users/Елизавета/veterinary-clinic/frontend/src/components/petsSlider/PetsSlider.js"],"sourcesContent":["import React from 'react';\r\n\r\nimport Pets from \"../pets/Pets\";\r\n\r\nconst flickityOptions = {\r\n    contain: true,\r\n    wrapAround: true,\r\n    autoPlay: 2000,\r\n    prevNextButtons: true,\r\n    pageDots: true,\r\n    setGallerySize: false\r\n};\r\n\r\nconst PetsSlider = ({ pets, isPetsLoading, id }) => {\r\n  return (\r\n    <Flickity\r\n      className=\"carousel\" // или любой другой класс, который вы хотите использовать\r\n      elementType={'div'} // по умолчанию 'div'\r\n      options={flickityOptions} // Опции Flickity\r\n      disableImagesLoaded={false} // Обрабатывать загрузку изображений\r\n      reloadOnUpdate // Перезагружать при обновлении\r\n      static // Статический, для более гладкой интеграции с React\r\n    >\r\n      {(isPetsLoading ? [...Array(3)] : pets.items || []).map((obj, index) =>\r\n        isPetsLoading ? (\r\n          <div key={index} className=\"carousel-cell\">\r\n            <Pets isLoading={true} />\r\n          </div>\r\n        ) : (\r\n          <div key={obj._id} className=\"carousel-cell\">\r\n            <Pets\r\n              userId={id}\r\n              petId={obj._id}\r\n              name={obj.name}\r\n              breed={obj.breed}\r\n              gender={obj.gender}\r\n              species={obj.species}\r\n              age={obj.age}\r\n              avatarUrl={obj.avatarUrl}\r\n            />\r\n          </div>\r\n        )\r\n      )}\r\n    </Flickity>\r\n  );\r\n};\r\n\r\nexport default PetsSlider;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,IAAI,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,eAAe,GAAG;EACpBC,OAAO,EAAE,IAAI;EACbC,UAAU,EAAE,IAAI;EAChBC,QAAQ,EAAE,IAAI;EACdC,eAAe,EAAE,IAAI;EACrBC,QAAQ,EAAE,IAAI;EACdC,cAAc,EAAE;AACpB,CAAC;AAED,MAAMC,UAAU,GAAGA,CAAC;EAAEC,IAAI;EAAEC,aAAa;EAAEC;AAAG,CAAC,KAAK;EAClD,oBACEX,OAAA,CAACY,QAAQ;IACPC,SAAS,EAAC,UAAU,CAAC;IAAA;IACrBC,WAAW,EAAE,KAAM,CAAC;IAAA;IACpBC,OAAO,EAAEd,eAAgB,CAAC;IAAA;IAC1Be,mBAAmB,EAAE,KAAM,CAAC;IAAA;IAC5BC,cAAc,OAAC;IAAA;IACfC,MAAM,OAAC;IAAA;IAAAC,QAAA,EAEN,CAACT,aAAa,GAAG,CAAC,GAAGU,KAAK,CAAC,CAAC,CAAC,CAAC,GAAGX,IAAI,CAACY,KAAK,IAAI,EAAE,EAAEC,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,KACjEd,aAAa,gBACXV,OAAA;MAAiBa,SAAS,EAAC,eAAe;MAAAM,QAAA,eACxCnB,OAAA,CAACF,IAAI;QAAC2B,SAAS,EAAE;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,GADjBL,KAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV,CAAC,gBAEN7B,OAAA;MAAmBa,SAAS,EAAC,eAAe;MAAAM,QAAA,eAC1CnB,OAAA,CAACF,IAAI;QACHgC,MAAM,EAAEnB,EAAG;QACXoB,KAAK,EAAER,GAAG,CAACS,GAAI;QACfC,IAAI,EAAEV,GAAG,CAACU,IAAK;QACfC,KAAK,EAAEX,GAAG,CAACW,KAAM;QACjBC,MAAM,EAAEZ,GAAG,CAACY,MAAO;QACnBC,OAAO,EAAEb,GAAG,CAACa,OAAQ;QACrBC,GAAG,EAAEd,GAAG,CAACc,GAAI;QACbC,SAAS,EAAEf,GAAG,CAACe;MAAU;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B;IAAC,GAVMN,GAAG,CAACS,GAAG;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAWZ,CAET;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEf,CAAC;AAACU,EAAA,GAhCI/B,UAAU;AAkChB,eAAeA,UAAU;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}