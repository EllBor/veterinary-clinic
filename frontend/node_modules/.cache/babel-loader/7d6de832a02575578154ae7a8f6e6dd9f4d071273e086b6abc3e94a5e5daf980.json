{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"../../axios\";\nexport const fetchUsers = createAsyncThunk('users/fetchUsers', async id => {\n  const {\n    data\n  } = await axios.get('/users/${userId}');\n  return data;\n});\nconst initialState = {\n  users: {\n    items: [],\n    status: 'loading'\n  }\n};\nconst usersSlice = createSlice({\n  name: 'users',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchUsers.pending, state => {\n      state.status = 'loading';\n      state.error = null;\n    }).addCase(fetchUsers.fulfilled, (state, action) => {\n      state.status = 'loaded';\n      state.items = action.payload;\n    }).addCase(fetchUsers.rejected, (state, action) => {\n      state.status = 'error';\n      state.error = action.error.message;\n    });\n  }\n});\nexport const usersReducer = usersSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","fetchUsers","id","data","get","initialState","users","items","status","usersSlice","name","reducers","extraReducers","builder","addCase","pending","state","error","fulfilled","action","payload","rejected","message","usersReducer","reducer"],"sources":["C:/Users/Елизавета/veterinary-clinic/frontend/src/redux/slices/users.js"],"sourcesContent":["import {createSlice, createAsyncThunk} from \"@reduxjs/toolkit\";\r\nimport axios from \"../../axios\";\r\n\r\nexport const fetchUsers = createAsyncThunk('users/fetchUsers', async (id) => {\r\n    const {data} = await axios.get('/users/${userId}');\r\n    return data;\r\n})\r\n\r\nconst initialState = {\r\n    users: {\r\n        items: [],\r\n        status: 'loading',\r\n    }\r\n};\r\n\r\nconst usersSlice = createSlice({\r\n    name: 'users',\r\n    initialState,\r\n    reducers: {},\r\n    extraReducers: (builder) => {\r\n        builder\r\n        .addCase(fetchUsers.pending, (state) => {\r\n            state.status = 'loading';\r\n            state.error = null;\r\n        })\r\n        .addCase(fetchUsers.fulfilled, (state, action) => {\r\n            state.status = 'loaded';\r\n            state.items = action.payload;\r\n        })\r\n        .addCase(fetchUsers.rejected, (state, action) => {\r\n            state.status = 'error';\r\n            state.error = action.error.message;\r\n        });\r\n    },\r\n})\r\n\r\nexport const usersReducer = usersSlice.reducer;"],"mappings":"AAAA,SAAQA,WAAW,EAAEC,gBAAgB,QAAO,kBAAkB;AAC9D,OAAOC,KAAK,MAAM,aAAa;AAE/B,OAAO,MAAMC,UAAU,GAAGF,gBAAgB,CAAC,kBAAkB,EAAE,MAAOG,EAAE,IAAK;EACzE,MAAM;IAACC;EAAI,CAAC,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,kBAAkB,CAAC;EAClD,OAAOD,IAAI;AACf,CAAC,CAAC;AAEF,MAAME,YAAY,GAAG;EACjBC,KAAK,EAAE;IACHC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE;EACZ;AACJ,CAAC;AAED,MAAMC,UAAU,GAAGX,WAAW,CAAC;EAC3BY,IAAI,EAAE,OAAO;EACbL,YAAY;EACZM,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACNC,OAAO,CAACb,UAAU,CAACc,OAAO,EAAGC,KAAK,IAAK;MACpCA,KAAK,CAACR,MAAM,GAAG,SAAS;MACxBQ,KAAK,CAACC,KAAK,GAAG,IAAI;IACtB,CAAC,CAAC,CACDH,OAAO,CAACb,UAAU,CAACiB,SAAS,EAAE,CAACF,KAAK,EAAEG,MAAM,KAAK;MAC9CH,KAAK,CAACR,MAAM,GAAG,QAAQ;MACvBQ,KAAK,CAACT,KAAK,GAAGY,MAAM,CAACC,OAAO;IAChC,CAAC,CAAC,CACDN,OAAO,CAACb,UAAU,CAACoB,QAAQ,EAAE,CAACL,KAAK,EAAEG,MAAM,KAAK;MAC7CH,KAAK,CAACR,MAAM,GAAG,OAAO;MACtBQ,KAAK,CAACC,KAAK,GAAGE,MAAM,CAACF,KAAK,CAACK,OAAO;IACtC,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMC,YAAY,GAAGd,UAAU,CAACe,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}