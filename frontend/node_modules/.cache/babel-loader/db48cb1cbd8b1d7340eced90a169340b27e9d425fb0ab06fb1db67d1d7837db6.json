{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nexport const fetchDoctors = createAsyncThunk('doctors/fetchDoctors', async () => {\n  const {\n    data\n  } = await axios.get('/doctors');\n  return data;\n});\nconst initialState = {\n  doctors: {\n    items: [],\n    status: 'loading'\n  }\n};\nconst DoctorsSlice = createSlice({\n  name: 'doctors',\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [fetchDoctors.pending]: state => {\n      state.doctors.items = [];\n      state.doctors.status = 'loading';\n    },\n    [fetchDoctors.fulfilled]: (state, action) => {\n      state.doctors.items = action.payload;\n      state.doctors.status = 'loaded';\n    },\n    [fetchDoctors.rejected]: state => {\n      state.doctors.items = [];\n      state.doctors.status = 'error';\n    }\n  }\n});\nexport default doctorsReducer = DoctorsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchDoctors","data","axios","get","initialState","doctors","items","status","DoctorsSlice","name","reducers","extraReducers","pending","state","fulfilled","action","payload","rejected","doctorsReducer","reducer"],"sources":["C:/Users/Елизавета/veterinary-clinic/frontend/src/redux/slices/doctors.js"],"sourcesContent":["import {createSlice, createAsyncThunk} from \"@reduxjs/toolkit\";\r\n\r\nexport const fetchDoctors = createAsyncThunk('doctors/fetchDoctors', async () => {\r\n    const {data} = await axios.get('/doctors');\r\n    return data;\r\n})\r\n\r\nconst initialState = {\r\n    doctors: {\r\n        items: [],\r\n        status: 'loading',\r\n    }\r\n};\r\n\r\nconst DoctorsSlice = createSlice({\r\n    name: 'doctors',\r\n    initialState,\r\n    reducers: {},\r\n    extraReducers: {\r\n        [fetchDoctors.pending]: (state) => {\r\n            state.doctors.items = [];\r\n            state.doctors.status = 'loading';\r\n        },\r\n        [fetchDoctors.fulfilled]: (state, action) => {\r\n            state.doctors.items = action.payload;\r\n            state.doctors.status = 'loaded';\r\n        },\r\n        [fetchDoctors.rejected]: (state) => {\r\n            state.doctors.items = [];\r\n            state.doctors.status = 'error';\r\n        },\r\n    },\r\n})\r\n\r\nexport default doctorsReducer = DoctorsSlice.reducer;"],"mappings":"AAAA,SAAQA,WAAW,EAAEC,gBAAgB,QAAO,kBAAkB;AAE9D,OAAO,MAAMC,YAAY,GAAGD,gBAAgB,CAAC,sBAAsB,EAAE,YAAY;EAC7E,MAAM;IAACE;EAAI,CAAC,GAAG,MAAMC,KAAK,CAACC,GAAG,CAAC,UAAU,CAAC;EAC1C,OAAOF,IAAI;AACf,CAAC,CAAC;AAEF,MAAMG,YAAY,GAAG;EACjBC,OAAO,EAAE;IACLC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE;EACZ;AACJ,CAAC;AAED,MAAMC,YAAY,GAAGV,WAAW,CAAC;EAC7BW,IAAI,EAAE,SAAS;EACfL,YAAY;EACZM,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAE;IACX,CAACX,YAAY,CAACY,OAAO,GAAIC,KAAK,IAAK;MAC/BA,KAAK,CAACR,OAAO,CAACC,KAAK,GAAG,EAAE;MACxBO,KAAK,CAACR,OAAO,CAACE,MAAM,GAAG,SAAS;IACpC,CAAC;IACD,CAACP,YAAY,CAACc,SAAS,GAAG,CAACD,KAAK,EAAEE,MAAM,KAAK;MACzCF,KAAK,CAACR,OAAO,CAACC,KAAK,GAAGS,MAAM,CAACC,OAAO;MACpCH,KAAK,CAACR,OAAO,CAACE,MAAM,GAAG,QAAQ;IACnC,CAAC;IACD,CAACP,YAAY,CAACiB,QAAQ,GAAIJ,KAAK,IAAK;MAChCA,KAAK,CAACR,OAAO,CAACC,KAAK,GAAG,EAAE;MACxBO,KAAK,CAACR,OAAO,CAACE,MAAM,GAAG,OAAO;IAClC;EACJ;AACJ,CAAC,CAAC;AAEF,eAAeW,cAAc,GAAGV,YAAY,CAACW,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}